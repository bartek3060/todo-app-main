/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "assets/scripts/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("let allTasks = [...document.querySelectorAll('.listOfTasks li')]\r\nlet buttons = [...document.querySelectorAll('.listOfTasks button')]\r\nlet darkMode = false\r\nconst queringOneElementFunction = (selector) => document.querySelector(selector)\r\nconst createElement = (element) => {\r\n    return document.createElement(element)\r\n}\r\nconst queringMultiElementFunction = (selector) => document.querySelectorAll(selector)\r\nconst getNumberOFActiveTasks = () => {\r\n    const activeTasks = queringMultiElementFunction('[data-tasktype=\"active\"]')\r\n    console.log(activeTasks)\r\n    return activeTasks.length\r\n}\r\nconst updateNumberOFActiveTasks = () => {\r\n    const numberActiveTasksDOM = queringOneElementFunction('.numberOfTasks')\r\n    numberActiveTasksDOM.textContent = `${getNumberOFActiveTasks()} items left`\r\n}\r\nconst clearInputHandler = () => {\r\n    const input = queringOneElementFunction('input')\r\n    input.value = ''\r\n}\r\nconst submitFunctionHandler = (e) => {\r\n    e.preventDefault()\r\n    if (!queringOneElementFunction('input').value) {\r\n        return\r\n    } else {\r\n        updateNumberOFActiveTasks()\r\n        const inputValue = queringOneElementFunction('input').value\r\n\r\n        allTasks.push(renderTask(inputValue, 'active'))\r\n        updateNumberOFActiveTasks()\r\n        console.log(inputValue)\r\n        clearInputHandler()\r\n        buttons = [...document.querySelectorAll('.listFfTasks button')]\r\n    }\r\n}\r\nconst removeTaskHandler = (e) => {\r\n    console.log(e.target.closest('li').textContent)\r\n    allTasks = allTasks.filter(task => !(task.textContent == e.target.closest('li').textContent))\r\n    e.target.closest('li').remove()\r\n    console.log(allTasks)\r\n    updateNumberOFActiveTasks()\r\n}\r\nconst changeStatusHandler = (e) => {\r\n    const li = e.target.closest('li')\r\n    if (li.dataset.tasktype == 'active') {\r\n        li.dataset.tasktype = 'complete'\r\n        e.target.classList.add('complete')\r\n    } else {\r\n        li.dataset.tasktype = 'active'\r\n        e.target.classList.remove('complete')\r\n    }\r\n    allTasks = [...document.querySelectorAll('.listOfTasks li')]\r\n    buttons = [...document.querySelectorAll('.listofTasks button')]\r\n    updateNumberOFActiveTasks()\r\n}\r\nconst dragAndDrop = () => {\r\n    const dragArea = queringOneElementFunction('.listOfTasks')\r\n    new Sortable(dragArea, {\r\n        animation: 500\r\n    })\r\n}\r\n\r\nconst renderTask = (taskContent, listType) => {\r\n    const ul = queringOneElementFunction('.listOfTasks')\r\n    const li = createElement('li')\r\n    li.classList.add('task')\r\n    li.setAttribute('data-tasktype', listType)\r\n    li.setAttribute('draggable', true)\r\n\r\n    const button = createElement('button')\r\n    button.addEventListener('click', changeStatusHandler)\r\n    if (darkMode) {\r\n        button.classList.add('dark')\r\n        li.style.color = 'white'\r\n    } else {\r\n        button.classList.remove('dark')\r\n        li.style.color = 'black'\r\n    }\r\n    if (listType == 'complete') {\r\n        li.classList.add('complete')\r\n        button.classList.add('complete')\r\n\r\n    }\r\n    const h3 = createElement('h3')\r\n    h3.textContent = taskContent\r\n    const img = createElement('img')\r\n    img.addEventListener('click', removeTaskHandler)\r\n    img.src = '../images/icon-cross.svg'\r\n    li.append(button)\r\n    li.append(h3)\r\n    li.append(img)\r\n    ul.append(li)\r\n    return li\r\n}\r\nconst renderList = (list) => {\r\n    const ul = queringOneElementFunction('.listOfTasks')\r\n    ul.textContent = ''\r\n    list.forEach(task => {\r\n        renderTask(task.textContent, task.dataset.tasktype)\r\n    })\r\n}\r\nconst changeListHandler = (e) => {\r\n    let listToCreate\r\n    const allTasksclass = queringOneElementFunction('.filterAllTasks')\r\n    const aciveTasksclass = queringOneElementFunction('.filterActiveTasks')\r\n    const completeTasksclass = queringOneElementFunction('.filterTasksCompleted')\r\n    if (e.target.textContent == 'All') {\r\n\r\n        allTasksclass.classList.add('active')\r\n        aciveTasksclass.classList.remove('active')\r\n        completeTasksclass.classList.remove('active')\r\n        listToCreate = allTasks\r\n\r\n    } else if (e.target.textContent == 'Active') {\r\n        listToCreate = allTasks.filter(task => task.dataset.tasktype == 'active')\r\n        allTasksclass.classList.remove('active')\r\n        aciveTasksclass.classList.add('active')\r\n        completeTasksclass.classList.remove('active')\r\n\r\n    } else if (e.target.textContent == 'Completed') {\r\n        listToCreate = allTasks.filter(task => task.dataset.tasktype == 'complete')\r\n        allTasksclass.classList.remove('active')\r\n        aciveTasksclass.classList.remove('active')\r\n        completeTasksclass.classList.add('active')\r\n    }\r\n    renderList(listToCreate)\r\n}\r\nconst removeDoneHandler = (e) => {\r\n    allTasks = allTasks.filter(task => task.dataset.tasktype != 'complete')\r\n    renderList(allTasks)\r\n}\r\nconst darkModeHandler = (e) => {\r\n    const bgi = queringOneElementFunction('.background-image')\r\n    const form = queringOneElementFunction('form')\r\n    const formBtn = queringOneElementFunction('form button')\r\n    const input = queringOneElementFunction('input')\r\n    const ul = queringOneElementFunction('.allTasks')\r\n    const ulMobile = queringOneElementFunction('.allTasks .options .filterOptions')\r\n    const allTasksclass = queringOneElementFunction('.filterAllTasks')\r\n    const aciveTasksclass = queringOneElementFunction('.filterActiveTasks')\r\n    const completeTasksclass = queringOneElementFunction('.filterTasksCompleted')\r\n    allTasks = [...document.querySelectorAll('.listOfTasks li')]\r\n    buttons = [...document.querySelectorAll('.listOfTasks button')]\r\n    console.log(buttons)\r\n\r\n    darkMode = !darkMode\r\n\r\n    bgi.classList.toggle('dark')\r\n    document.body.classList.toggle('dark')\r\n    form.classList.toggle('dark')\r\n    formBtn.classList.toggle('dark')\r\n    input.classList.toggle('dark')\r\n    ul.classList.toggle('dark')\r\n    allTasksclass.classList.toggle('dark')\r\n    aciveTasksclass.classList.toggle('dark')\r\n    completeTasksclass.classList.toggle('dark')\r\n    ulMobile.classList.toggle('dark')\r\n    console.log(buttons)\r\n    if (darkMode == true) {\r\n        e.target.src = './images/icon-sun.svg'\r\n        buttons.forEach(btn => {\r\n            btn.classList.add('dark')\r\n\r\n        })\r\n        allTasks.forEach(task => {\r\n            task.style.color = \"white\"\r\n        })\r\n    } else {\r\n        e.target.src = './images/icon-moon.svg'\r\n        buttons.forEach(btn => {\r\n            btn.classList.remove('dark')\r\n        })\r\n        allTasks.forEach(task => {\r\n            task.style.color = \"black\"\r\n        })\r\n    }\r\n}\r\nconst startApp = () => {\r\n    const form = queringOneElementFunction('form')\r\n    const input = queringOneElementFunction('input')\r\n    const filterOptions = queringOneElementFunction('.filterOptions')\r\n    const allTasks = [...queringMultiElementFunction('.listOfTasks li')]\r\n    const ul = queringOneElementFunction('.listOfTasks')\r\n    const removeDone = queringOneElementFunction('.clearCompletedTasks')\r\n    const darkMode = queringOneElementFunction('.darkIcon')\r\n    renderList(allTasks)\r\n    form.addEventListener('submit', submitFunctionHandler)\r\n    input.addEventListener('click', clearInputHandler)\r\n    filterOptions.addEventListener('click', changeListHandler)\r\n    removeDone.addEventListener('click', removeDoneHandler)\r\n    darkMode.addEventListener('click', darkModeHandler)\r\n    updateNumberOFActiveTasks()\r\n    dragAndDrop()\r\n}\r\nstartApp()//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app.js\n");

/***/ })

/******/ });